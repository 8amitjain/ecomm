# Generated by Django 3.0.7 on 2020-07-22 08:38

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=50, unique=True)),
                ('brand_image', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('image', models.ImageField(null=True, upload_to='')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_ref_id', models.CharField(max_length=15, unique=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Use map widget for point the house location', srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Vendor Locations',
            },
        ),
        migrations.CreateModel(
            name='VendorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=100, null=True)),
                ('apartment_address', models.CharField(max_length=100, null=True)),
                ('city', models.TextField(default='Jalgaon')),
                ('postal_code', models.IntegerField(null=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vendors.VendorLocation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Vendor Addresses',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('adding_product', models.BooleanField(default=False)),
                ('phone_number', models.IntegerField(null=True)),
                ('pin_code', models.IntegerField(null=True)),
                ('vendor_ref_number', models.CharField(default='VRN-100000', max_length=15, unique=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vendors.VendorAddress')),
            ],
        ),
        migrations.CreateModel(
            name='SameItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_ref_number', models.CharField(default='IRN-100000', max_length=15)),
                ('stock_no', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor')),
            ],
            options={
                'ordering': ['item_ref_number'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_ref_number', models.CharField(default='IRN-100000', max_length=15, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('price', models.FloatField(null=True)),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('label', models.CharField(choices=[('Sale', 'Sale'), ('New', 'New'), ('Promotion', 'Promotion'), ('Trending', 'Trending'), ('Top Selling', 'Top Selling')], max_length=11, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('stock_no', models.IntegerField()),
                ('short_description', models.TextField(help_text='To describe product in short', null=True)),
                ('description', models.TextField(help_text='Overview product', null=True)),
                ('key_benefits', models.TextField(help_text="Describe product's Benefits", null=True)),
                ('direction_for_use', models.TextField(help_text="Describe product's Direction for use / Dosage", null=True)),
                ('safety_information', models.TextField(help_text="Describe product's Safety information", null=True)),
                ('image_main', models.ImageField(null=True, upload_to='')),
                ('image_2', models.ImageField(null=True, upload_to='')),
                ('image_3', models.ImageField(null=True, upload_to='')),
                ('image_4', models.ImageField(null=True, upload_to='')),
                ('image_5', models.ImageField(null=True, upload_to='')),
                ('is_active', models.BooleanField(default=True)),
                ('trending', models.BooleanField(default=False)),
                ('has_variation', models.BooleanField(default=False, help_text='If this is ticked, You can add variation later to this product.')),
                ('variation_id', models.CharField(max_length=20, null=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Brands')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Category')),
                ('same_item', models.ManyToManyField(to='vendors.SameItem')),
                ('vendors', models.ManyToManyField(to='vendors.Vendor')),
            ],
            options={
                'ordering': ['item_ref_number'],
            },
        ),
    ]
